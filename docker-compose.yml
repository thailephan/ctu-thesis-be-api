version: '3.8'

services:
  db-postgres:
    image: postgres:14.5-alpine
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres-simple:/var/lib/postgresql/data
#    networks:
#      - app-network
    env_file:
      - ./api-service/.env.development.local

  cassandra:
    image: cassandra:4.0.5
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    volumes:
      - ./volumes/cassandra:/var/lib/cassandra
#     https://medium.com/featurepreneur/enabling-sasi-index-86604c37d31b
#     file cassandra.yaml in docker copy out here
#     https://stackoverflow.com/questions/48734670/sasi-index-in-cassandra-and-how-it-differs-from-normal-indexing
      - ./cassandra.yaml:/etc/cassandra/cassandra.yaml
#    networks:
#      - db_cassandra_network

#  nginx:
#    image: nginx:alpine
#    container_name: nginx
#    hostname: nginx
#    ports:
#      - "80:80"
#      - "433:433"
#    volumes:
#      - "./nginx.conf:/etc/nginx/nginx.conf"
#    depends_on:
#      - asset-service
#    networks:
#      - asset-network

#  asset-service:
#    build:
#      context: asset-service
#      dockerfile: Dockerfile
#    container_name: asset-service
#    hostname: asset-service
##    Uncomment to expose to connect direct by port 8080 of server
#    ports:
#      - "8080:8080"
#    volumes:
#      - "./asset-service/public:/app/public"
#    networks:
#      - asset-network

  redis:
    image: redis:alpine3.16
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redis:/data
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "3"

#  api-service:
#    build:
#      context: api-service
#      dockerfile: Dockerfile
#    container_name: api-service
#    hostname: api-service
#    #    Uncomment to expose to connect direct by port 8080 of server
#    #    ports:
#    #      - "4001:4001"
#    networks:
#      - api-network
#
#  chat-service:
#    build:
#      context: chat-service
#      dockerfile: Dockerfile
#    container_name: chat-service
#    hostname: chat-service
#    #    Uncomment to expose to connect direct by port 8080 of server
#    #    ports:
#    #      - "4001:4001"
#    networks:
#      - chat-network
#

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_COMPRESSION_TYPE: 'gzip'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

#networks:
#  api-network:
#    driver: bridge
#  chat-network:
#    driver: bridge
#  asset-network:
#    driver: bridge